"use strict";(self.webpackChunkelement_web=self.webpackChunkelement_web||[]).push([[1615],{"./src/components/views/dialogs/DAOWalletDialog.tsx":(e,l,a)=>{a.r(l),a.d(l,{default:()=>E});var t=a("./node_modules/react/index.js"),n=a("./src/components/views/dialogs/BaseDialog.tsx"),s=a("./src/components/views/elements/AccessibleButton.tsx"),c=a("./src/components/views/elements/Field.tsx"),o=a("./src/components/views/elements/Spinner.tsx"),r=a("./src/utils/DAOMnemonicWallet.ts"),i=a("./src/utils/DAOContributionTracker.ts"),m=a("./src/Modal.tsx"),d=a("./src/components/views/dialogs/InfoDialog.tsx"),u=a("./src/MatrixClientPeg.ts"),y=a("./src/stores/spaces/SpaceStore.ts"),p=a("./src/dispatcher/dispatcher.ts"),g=a("./src/dispatcher/actions.ts");const A=({onClose:e})=>{const[l,n]=(0,t.useState)(!1),[A,E]=(0,t.useState)(null),[h,_]=(0,t.useState)([]),[w,W]=(0,t.useState)(""),[f,x]=(0,t.useState)(!1),[D,b]=(0,t.useState)(!1),[v,M]=(0,t.useState)(null),[k,C]=(0,t.useState)([]),P=r.y.getInstance(),N=(0,t.useCallback)(async e=>{if(n(e.length>0),e.length>0){const l=e[0].daoId,a=P.getDAOWallet(l);E(a);try{console.log("🔄 MyWalletPanel: Updating wallet summaries...");const e=await P.getAllProtocolDAOBalances();console.log("📊 MyWalletPanel: Received balances:",e),_(e)}catch(l){console.error("❌ MyWalletPanel: Failed to get all protocol DAO balances:",l),_(e)}}else E(null),_([])},[P]);(0,t.useEffect)(()=>((async()=>{const e=P.getAllDAOWallets();if(n(e.length>0),e.length>0){const l=e[0].daoId,a=P.getDAOWallet(l);E(a);try{console.log("🏁 MyWalletPanel: Initial load - getting all protocol DAO balances...");const e=await P.getAllProtocolDAOBalances();console.log("📊 MyWalletPanel: Initial load - received balances:",e),_(e)}catch(l){console.error("❌ MyWalletPanel: Initial load - failed to get all protocol DAO balances:",l),_(e)}}else _([]);u.J.safeGet();const l=y.Ay.instance.spacePanelSpaces.filter(e=>e.name&&e.roomId.startsWith("!"));C(l)})(),P.addListener(N),()=>P.removeListener(N)),[P,N]);const O=(0,t.useCallback)(async()=>{if(0!==k.length){b(!0),M(null);try{const e=k[0],l=await P.createDAOWallet(e.roomId,e.name);for(let e=1;e<k.length;e++){const a=k[e];await P.createDAOWalletFromMnemonic(a.roomId,a.name,"B",1,l.mnemonic)}m.Ay.createDialog(d.A,{title:"Wallet Created Successfully",description:t.createElement("div",null,t.createElement("p",null,t.createElement("strong",null,"MyWallet has been created!")),t.createElement("p",null,"You can use the same wallet across all DAOs."),t.createElement("p",null,"Wallet Address: ",t.createElement("code",null,l.address)),t.createElement("p",null,t.createElement("em",null,"Please keep your mnemonic phrase in a safe place.")),t.createElement("div",{style:{backgroundColor:"#f5f5f5",padding:"15px",borderRadius:"4px",fontFamily:"monospace",wordBreak:"break-all",margin:"10px 0",fontSize:"12px",lineHeight:"1.4"}},t.createElement("div",null,t.createElement("strong",null,"Mnemonic:")," ",l.mnemonic))),button:"OK"}),i.n.getInstance().initialize();try{const e=await P.getAllProtocolDAOBalances();_(e)}catch(e){console.error("Failed to update all protocol DAO balances:",e)}}catch(e){M(e instanceof Error?e.message:"지갑 생성 실패")}finally{b(!1)}}else M("DAO 스페이스가 없습니다. 먼저 DAO 스페이스에 가입하세요.")},[P,k]),I=(0,t.useCallback)(async()=>{if(w.trim())if(0!==k.length){b(!0),M(null);try{if(!P.validateMnemonicPhrase(w.trim()))throw new Error("유효하지 않은 니모닉 문구입니다");for(const e of k)await P.createDAOWalletFromMnemonic(e.roomId,e.name,"B",1,w.trim());m.Ay.createDialog(d.A,{title:"지갑 복구 완료",description:t.createElement("div",null,t.createElement("p",null,t.createElement("strong",null,"마이월렛이 복구되었습니다!")),t.createElement("p",null,"모든 DAO에서 동일한 지갑을 사용할 수 있습니다."),t.createElement("p",null,t.createElement("em",null,"원장에서 기존 거래 기록을 바탕으로 잔액을 복구했습니다."))),button:"확인"}),i.n.getInstance().initialize();try{const e=await P.getAllProtocolDAOBalances();_(e)}catch(e){console.error("Failed to update all protocol DAO balances:",e)}x(!1),W("")}catch(e){M(e instanceof Error?e.message:"지갑 복원 실패")}finally{b(!1)}}else M("DAO 스페이스가 없습니다. 먼저 DAO 스페이스에 가입하세요.");else M("니모닉 문구를 입력해주세요")},[P,w,k]),S=(0,t.useCallback)(()=>{try{if(!A)throw new Error("지갑 정보를 찾을 수 없습니다");const e=`My Wallet Backup\nAddress: ${A.address}\nMnemonic: ${A.mnemonic}\n\n`,l=new Blob([e],{type:"text/plain; charset=utf-8"}),a=URL.createObjectURL(l),t=document.createElement("a");t.href=a,t.download=`my-wallet-backup-${(new Date).toISOString().split("T")[0]}.txt`,t.click(),URL.revokeObjectURL(a)}catch(e){console.error("Failed to export wallet:",e)}},[A]),F=(0,t.useCallback)(()=>{if(!A)return;if(confirm("Are you sure you want to delete your wallet?\n\nAll DAO wallets will be deleted and can only be recovered with your mnemonic phrase."))try{P.getAllDAOWallets().forEach(e=>{P.deleteDAOWallet(e.daoId)}),E(null),_([]),n(!1),m.Ay.createDialog(d.A,{title:"Wallet Deleted Successfully",description:"All DAO wallets have been deleted. You can recover them anytime with your mnemonic phrase.",button:"확인"})}catch(e){console.error("Failed to delete wallets:",e)}},[A,P]),L=(0,t.useCallback)(async()=>{if(!A)return;const e=await a.e(934).then(a.bind(a,"./src/components/views/dialogs/QRCodeDialog.tsx"));m.Ay.createDialog(e.default,{address:A.address,daoName:"My Wallet",space:null})},[A]),B=(0,t.useCallback)((l,a)=>{console.log(`🔗 Navigating to DAO: ${a} (${l})`),p.A.dispatch({action:g.r.ViewRoom,room_id:l,metricsTrigger:"MyWallet"}),e&&e()},[e]),R=(0,t.useCallback)((e,l)=>{try{const a=u.J.safeGet(),t=a.getRoom(e);return t?t.getCanonicalAlias()||`#${null==l?void 0:l.toLowerCase().replace(/\s+/g,"-")}:${a.getDomain()}`:`#${null==l?void 0:l.toLowerCase().replace(/\s+/g,"-")}:localhost`}catch(e){return`#${null==l?void 0:l.toLowerCase().replace(/\s+/g,"-")}:localhost`}},[]),$=()=>(console.log("🎨 Rendering balance cards. WalletSummaries:",h),0===h.length?(console.log("🎨 No wallet summaries to render"),null):t.createElement("div",{className:"mx_MyWalletPanel_balanceList"},t.createElement("h4",null,"DAO Balance"),h.map(e=>{return console.log(`🎨 Rendering card for ${e.daoName}: ${e.balance}${e.currency}`),t.createElement("div",{key:e.daoId,className:"mx_MyWalletPanel_balanceCard"},t.createElement("div",{className:"mx_MyWalletPanel_balanceHeader"},t.createElement("div",{className:"mx_MyWalletPanel_daoInfo"},t.createElement("div",{className:"mx_MyWalletPanel_daoMainInfo"},t.createElement("a",{href:"#",className:"mx_MyWalletPanel_daoNameLink",onClick:l=>{l.preventDefault(),B(e.daoId,e.daoName)}},e.daoName," Network"),t.createElement("span",{style:{margin:"0 8px"}}),t.createElement("span",{className:"mx_MyWalletPanel_daoId",style:{fontSize:"10px"}},R(e.daoId,e.daoName)))),t.createElement("div",{className:"mx_MyWalletPanel_balanceAmount"},(l=e.balance,(new Intl.NumberFormat).format(l))," ",e.currency)));var l})));return t.createElement("div",{className:"mx_MyWalletPanel"},l?t.createElement(t.Fragment,null,A?t.createElement("div",{className:"mx_MyWalletPanel_walletInfo"},t.createElement("div",{className:"mx_MyWalletPanel_address"},t.createElement("span",{className:"mx_MyWalletPanel_label"},"Address"),t.createElement("div",{className:"mx_MyWalletPanel_addressRow"},t.createElement("div",{className:"mx_MyWalletPanel_addressValue"},A.address),t.createElement("a",{href:"#",className:"mx_MyWalletPanel_copyLink",onClick:e=>{e.preventDefault(),navigator.clipboard.writeText(A.address);const l=e.currentTarget,a=l.textContent;l.textContent="복사됨!",setTimeout(()=>{l.textContent=a},1e3)}},"Copy"))),t.createElement("div",{className:"mx_MyWalletPanel_actions"},t.createElement("a",{href:"#",className:"mx_MyWalletPanel_actionLink",onClick:e=>{e.preventDefault(),S()}},"Backup"),t.createElement("span",{style:{margin:"0 12px"}}),t.createElement("a",{href:"#",className:"mx_MyWalletPanel_actionLink mx_MyWalletPanel_deleteLink",onClick:e=>{e.preventDefault(),F()}},"Delete"),t.createElement("span",{style:{margin:"0 12px"}}),t.createElement("a",{href:"#",className:"mx_MyWalletPanel_actionLink",onClick:e=>{e.preventDefault(),L()}},"QR"))):null,$()):t.createElement("div",{className:"mx_MyWalletPanel_card"},t.createElement("h3",null,"My Wallet"),t.createElement("p",null,"Create a new wallet or restore an existing one"),v&&t.createElement("div",{className:"mx_MyWalletPanel_error"},v),f?t.createElement("div",{className:"mx_MyWalletPanel_restoreForm"},t.createElement(c.A,{label:"Mnemonic Phrase (12 words)",placeholder:"word1 word2 word3 ...",value:w,onChange:e=>W(e.target.value),type:"text"}),t.createElement("div",{className:"mx_MyWalletPanel_restoreActions"},t.createElement(s.A,{kind:"primary",onClick:I,disabled:D||!w.trim()},D?t.createElement(o.A,{w:16,h:16}):"Restore"),t.createElement(s.A,{kind:"secondary",onClick:()=>{x(!1),W(""),M(null)},disabled:D},"Cancel"))):t.createElement(t.Fragment,null,t.createElement(s.A,{kind:"primary",onClick:O,disabled:D,className:"mx_MyWalletPanel_createButton"},D?t.createElement(o.A,{w:16,h:16}):"Create New Wallet"),t.createElement(s.A,{kind:"link",onClick:()=>x(!0),disabled:D,className:"mx_MyWalletPanel_restoreButton"},"Restore Existing Wallet"))))};function E(e){return t.createElement(n.A,{className:"mx_DAOWalletDialog",hasCancel:!0,onFinished:e.onFinished,title:"My Wallet",titleClass:"mx_DAOWalletDialog_title"},t.createElement("div",{className:"mx_DAOWalletDialog_content"},t.createElement(A,{onClose:e.onFinished})))}}}]);
//# sourceMappingURL=1615.js.map