{"version":3,"file":"bundles/af3fc8d7d965ff9298b1/4587.js","mappings":"qXAqBO,SAASA,EAAQC,EAAYC,GAChC,GAAIA,IAAUC,EAAAA,aAAaC,WAAaF,IAAUC,EAAAA,aAAaE,YAAa,CACxE,MAAMC,EAAaJ,IAAUC,EAAAA,aAAaC,UAAYD,EAAAA,aAAaE,YAAcF,EAAAA,aAAaC,UACxFG,EAAYC,EAAAA,GAAcC,SAASC,eAAeT,GAAMU,SAAST,GACjEU,EAAYL,EAAYL,EAAQI,EAChCO,EAASN,EAAY,KAAOL,EAClCY,EAAAA,EAAIC,SAASC,EAAAA,EAAgBhB,QAAQC,EAAKgB,OAAQhB,EAAMW,EAAWC,EAAQ,GAC/E,MACIK,EAAAA,GAAOC,KAAK,kBAAkBjB,gBAAoBD,EAAKmB,SAE/D,C","sources":["webpack://element-web/./src/utils/room/tagRoom.ts"],"sourcesContent":["/*\r\nCopyright 2024 New Vector Ltd.\r\nCopyright 2023 The Matrix.org Foundation C.I.C.\r\n\r\nSPDX-License-Identifier: AGPL-3.0-only OR GPL-3.0-only OR LicenseRef-Element-Commercial\r\nPlease see LICENSE files in the repository root for full details.\r\n*/\r\n\r\nimport { type Room } from \"matrix-js-sdk/src/matrix\";\r\nimport { logger } from \"matrix-js-sdk/src/logger\";\r\n\r\nimport RoomListStore from \"../../stores/room-list/RoomListStore\";\r\nimport { DefaultTagID, type TagID } from \"../../stores/room-list/models\";\r\nimport RoomListActions from \"../../actions/RoomListActions\";\r\nimport dis from \"../../dispatcher/dispatcher\";\r\n\r\n/**\r\n * Toggle tag for a given room\r\n * @param room The room to tag\r\n * @param tagId The tag to invert\r\n */\r\nexport function tagRoom(room: Room, tagId: TagID): void {\r\n    if (tagId === DefaultTagID.Favourite || tagId === DefaultTagID.LowPriority) {\r\n        const inverseTag = tagId === DefaultTagID.Favourite ? DefaultTagID.LowPriority : DefaultTagID.Favourite;\r\n        const isApplied = RoomListStore.instance.getTagsForRoom(room).includes(tagId);\r\n        const removeTag = isApplied ? tagId : inverseTag;\r\n        const addTag = isApplied ? null : tagId;\r\n        dis.dispatch(RoomListActions.tagRoom(room.client, room, removeTag, addTag, 0));\r\n    } else {\r\n        logger.warn(`Unexpected tag ${tagId} applied to ${room.roomId}`);\r\n    }\r\n}\r\n"],"names":["tagRoom","room","tagId","DefaultTagID","Favourite","LowPriority","inverseTag","isApplied","RoomListStore","instance","getTagsForRoom","includes","removeTag","addTag","dis","dispatch","RoomListActions","client","logger","warn","roomId"],"sourceRoot":""}