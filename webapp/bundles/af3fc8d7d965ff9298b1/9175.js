"use strict";(self.webpackChunkelement_web=self.webpackChunkelement_web||[]).push([[9175],{"./src/components/views/dialogs/SendTokenDialog.tsx":(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var a=n("./node_modules/@babel/runtime/helpers/esm/defineProperty.js"),o=n("./node_modules/react/index.js"),r=n("./src/components/views/dialogs/BaseDialog.tsx"),s=n("./src/components/views/elements/AccessibleButton.tsx"),l=n("./src/components/views/elements/Field.tsx"),i=n("./src/components/views/elements/Spinner.tsx"),c=n("./src/MatrixClientPeg.ts"),d=n("./src/utils/DAOMnemonicWallet.ts"),m=n("./src/stores/spaces/SpaceStore.ts"),g=n("./src/Modal.tsx"),u=n("./src/components/views/dialogs/InfoDialog.tsx");function b(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,a)}return n}function f(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?b(Object(n),!0).forEach(function(t){(0,a.A)(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):b(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function p(e){const[t,a]=(0,o.useState)(""),[b,p]=(0,o.useState)(""),[h,y]=(0,o.useState)(!1),[w,v]=(0,o.useState)(null),S=d.y.getInstance(),B=(0,o.useCallback)(()=>{const e=document.createElement("input");e.type="file",e.accept="image/*",e.onchange=async e=>{var t;const o=null===(t=e.target.files)||void 0===t?void 0:t[0];if(o)try{console.log("üì∑ QR Image uploaded, processing...");const e=new Image,t=document.createElement("canvas"),r=t.getContext("2d");e.onload=async()=>{try{t.width=e.width,t.height=e.height,null==r||r.drawImage(e,0,0);const o=null==r?void 0:r.getImageData(0,0,t.width,t.height);if(o)try{const e=(await n.e(2758).then(n.t.bind(n,"./node_modules/jsqr/dist/jsQR.js",23))).default(o.data,o.width,o.height);e?(console.log("‚úÖ QR Code decoded:",e.data),a(e.data),v(null)):(console.warn("‚ùå No QR code found in image"),v("No QR code found in the uploaded image"))}catch(e){console.warn("jsQR library not available, using fallback"),v("QR code processing requires additional library. Please manually enter the address."),console.log("üì∑ QR image uploaded but automatic parsing not available")}}catch(e){console.error("Failed to decode QR code:",e),v("Failed to decode QR code from image")}};const s=new FileReader;s.onload=t=>{var n;e.src=null===(n=t.target)||void 0===n?void 0:n.result},s.readAsDataURL(o)}catch(e){console.error("Failed to process QR code:",e),v("Failed to process uploaded image")}},e.click()},[]),O=(0,o.useCallback)(async()=>{if(t.trim())if(t.trim().toLowerCase()!==e.senderAddress.toLowerCase())if(!b.trim()||isNaN(Number(b))||Number(b)<=0)v("Please enter valid amount");else if(Number(b)>e.maxBalance)v(`Amount cannot exceed ${e.maxBalance} ${e.currency}`);else{y(!0),v(null);try{await k(),g.Ay.createDialog(u.A,{title:"Transaction Sent",description:`Successfully sent ${b} ${e.currency} to ${t}`,button:"OK",onFinished:()=>{console.log("üîÑ OK button clicked - forcing wallet refresh");const t=d.y.getInstance();t.notifyListeners(),setTimeout(async()=>{try{console.log(`üîÑ Force refreshing balance from ledger for DAO: ${e.daoId}`),await t.refreshDAOWalletBalance(e.daoId),console.log("‚úÖ Balance refresh completed")}catch(e){console.warn("Failed to refresh balance:",e)}},100)}}),e.onFinished()}catch(e){v(e instanceof Error?e.message:"Failed to send transaction")}finally{y(!1)}}else v("Cannot send tokens to your own address");else v("Please enter recipient address")},[t,b,e]),k=async()=>{var n;const a=c.J.safeGet();if(!a.getRoom(e.daoId))throw new Error("DAO space not found");const o=m.Ay.instance.getChildren(e.daoId).find(e=>{const t=a.getRoom(e.roomId);return t&&!t.isSpaceRoom()&&"ledger"===t.name});if(!o)throw new Error("Ledger room not found");const r=a.getRoom(o.roomId);if(!r)throw new Error("Failed to get ledger room");const s=S.getDAOWallet(e.daoId);if(!s)throw new Error("Sender wallet not found");const l=Number(b),i=s.balance-l,d=t.trim(),g=await A(r,d)+l,u=(new Date).toISOString(),p={type:"PoC:transfer",from:e.senderAddress,to:d,amount:l,balance:i,senderBalance:i,recipientBalance:g,timestamp:u,verifier:(null===(n=a.getUserId())||void 0===n||null===(n=n.split(":")[0])||void 0===n?void 0:n.substring(1))||"unknown",verifierUserId:a.getUserId()||"unknown",txHash:D()},h=S.signData(e.daoId,JSON.stringify(p));if(!h)throw new Error("Failed to sign transaction");await a.sendMessage(r.roomId,{msgtype:"m.text",body:`üè¶ TRANSACTION RECORD üè¶\n${JSON.stringify(p,null,2)}`,format:"org.matrix.custom.html",formatted_body:`\n                <h3>üè¶ TRANSACTION RECORD üè¶</h3>\n                <table border="1" style="border-collapse: collapse; width: 100%;">\n                    <tr><td><b>Type</b></td><td>${p.type}</td></tr>\n                    <tr><td><b>From</b></td><td>${p.from}</td></tr>\n                    <tr><td><b>To</b></td><td>${p.to}</td></tr>\n                    <tr><td><b>Amount</b></td><td>${p.amount}B</td></tr>\n                    <tr><td><b>Sender Balance</b></td><td>${p.senderBalance}B</td></tr>\n                    <tr><td><b>Recipient Balance</b></td><td>${p.recipientBalance}B</td></tr>\n                    <tr><td><b>Verifier</b></td><td>${p.verifier}</td></tr>\n                    <tr><td><b>Verifier ID</b></td><td><code>${p.verifierUserId}</code></td></tr>\n                    <tr><td><b>Timestamp</b></td><td>${new Date(p.timestamp).toISOString()}</td></tr>\n                    <tr><td><b>TX Hash</b></td><td><code>${p.txHash}</code></td></tr>\n                    <tr><td><b>Digital Signature</b></td><td><code>${h?h.substring(0,32)+"...":"N/A"}</code></td></tr>\n                    <tr><td><b>Signature Status</b></td><td>${h?"‚úÖ Signed":"‚ùå Unsigned"}</td></tr>\n                </table>\n            `,transaction_data:f(f({},p),{},{signature:h})}),S.updateDAOWalletBalance(e.daoId,i),console.log(`üí∏ Transaction sent: ${l}B from ${e.senderAddress} to ${d}`),console.log(`üí∞ New balances - Sender: ${i}B, Recipient: ${g}B`),setTimeout(async()=>{try{console.log(`üîÑ Refreshing balance from ledger for ${e.senderAddress}`),await S.refreshDAOWalletBalance(e.daoId)}catch(e){console.warn("Failed to refresh balance from ledger:",e)}},500)},A=async(e,t)=>{try{console.log(`üîç Getting current balance for recipient: ${t}`);const n=e.getLiveTimeline();let a=n.getEvents(),o=0;const r=10;for(;o<r;)try{const e=c.J.safeGet();if(!n.getPaginationToken("b"))break;await e.paginateEventTimeline(n,{backwards:!0,limit:50});if(n.getEvents().length===a.length)break;a=n.getEvents(),o++}catch(e){console.warn("‚ö†Ô∏è Failed to load more events:",e);break}const s=[...a].reverse();for(const e of s)if("m.room.message"===e.getType()){const n=e.getContent().transaction_data;if(n)if(n.to===t){if("number"==typeof n.recipientBalance)return console.log(`üí∞ Found recipient balance: ${n.recipientBalance}B`),n.recipientBalance;if("number"==typeof n.balance)return console.log(`üí∞ Found recipient balance (legacy): ${n.balance}B`),n.balance}else if(n.from===t){if("number"==typeof n.senderBalance)return console.log(`üí∞ Found sender balance: ${n.senderBalance}B`),n.senderBalance;if("number"==typeof n.balance)return console.log(`üí∞ Found sender balance (legacy): ${n.balance}B`),n.balance}}return console.log(`üí∞ No transaction history found for ${t}, starting with 0B`),0}catch(e){return console.error("Error getting recipient balance:",e),0}},D=()=>Math.random().toString(36).substring(2,8);return o.createElement(r.A,{className:"mx_SendTokenDialog",hasCancel:!0,onFinished:e.onFinished,title:`Send Brotherhood - ${e.daoName} DAO`,titleClass:"mx_SendTokenDialog_title"},o.createElement("div",{className:"mx_SendTokenDialog_content"},o.createElement("div",{className:"mx_SendTokenDialog_form"},o.createElement("div",{className:"mx_SendTokenDialog_addressRow"},o.createElement(l.A,{label:"Recipient Address",placeholder:"0x...",value:t,onChange:e=>a(e.target.value),type:"text",className:"mx_SendTokenDialog_addressField"}),o.createElement(s.A,{kind:"secondary",onClick:B,className:"mx_SendTokenDialog_qrButton"},"QR Upload")),o.createElement(l.A,{label:`Amount (Max: ${e.maxBalance} ${e.currency})`,placeholder:"0",value:b,onChange:e=>p(e.target.value),type:"number",step:"1",min:"1",max:e.maxBalance}),w&&o.createElement("div",{className:"mx_SendTokenDialog_error"},w),o.createElement("div",{className:"mx_SendTokenDialog_actions"},o.createElement(s.A,{kind:"secondary",onClick:e.onFinished,disabled:h},"Cancel"),o.createElement(s.A,{kind:"primary",onClick:O,disabled:h||!t.trim()||!b.trim()},h?o.createElement(i.A,{w:16,h:16}):"Send")))))}}}]);
//# sourceMappingURL=9175.js.map